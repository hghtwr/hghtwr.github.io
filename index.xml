<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Johannes Sonner (Hightower)</title><link>https://hghtwr.github.io/</link><description>Recent content on Johannes Sonner (Hightower)</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sat, 23 Nov 2024 01:46:06 +0100</lastBuildDate><atom:link href="https://hghtwr.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://hghtwr.github.io/pages/about-me/</link><pubDate>Sat, 23 Nov 2024 00:00:00 +0000</pubDate><guid>https://hghtwr.github.io/pages/about-me/</guid><description>About Me Link to heading I&amp;rsquo;m Johannes, a platform engineer.
If you think about software developers as factory workers building a car, I&amp;rsquo;m the one building the factory. I develop the necessary tools the developer need, put different combinations of these tools together, make sure they know where the tools are and how to use them. Blueprints I create help the developers to create new factory lines quickly and with the press of a button.</description></item><item><title>Kargo? Filling the gap!</title><link>https://hghtwr.github.io/posts/kargo-filling-the-gap/</link><pubDate>Sat, 23 Nov 2024 00:00:00 +0000</pubDate><guid>https://hghtwr.github.io/posts/kargo-filling-the-gap/</guid><description>GitOps sounds too good to be true. The idea of syncing the state of your systems and applications from a single source of truth in Git feels so natural and intuitive. GitOps offers many advantages, like having a versioned track record of your application. However, as great as this sounds, it&amp;rsquo;s only part of the picture.
In this article, I’ll take you on my journey to discover the missing piece in GitOps and explore a tool that might fill the gap: Kargo.</description></item><item><title>Minecraft Server on AWS ECS Fargate Spot instances controlled by Telegram Bot, powered by Pulumi IaC</title><link>https://hghtwr.github.io/posts/minecraft-server-on-aws-ecs-fargate-spot-instances-controlled-by-telegram-bot-powered-by-pulumi-iac/</link><pubDate>Tue, 26 Mar 2024 00:00:00 +0000</pubDate><guid>https://hghtwr.github.io/posts/minecraft-server-on-aws-ecs-fargate-spot-instances-controlled-by-telegram-bot-powered-by-pulumi-iac/</guid><description>Platform Engineering is basically like Minecraft. You carefully craft the best possible solution in a world with unlimited possibilities, only for some thing to blow up and ruin your day. Then you rebuild and create something even more awesome…
And as in real world, the fun starts, once you work together with other people. Hosting an own server requires either a rather high commitment to some public hosting provider (at least if you only play from time to time, like me) or to self-host your server with all the caveats attached.</description></item></channel></rss>